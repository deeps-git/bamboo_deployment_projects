export bamboo_deploy_environment bamboo_deploy_project bamboo_deploy_capserver bamboo_jacoco_version
export bamboo_deploy_project=`echo ${bamboo_deploy_project} | tr "[:upper:]" "[:lower:]"`
export playbook_name=${bamboo_deploy_project}
[ "${app_name}" = "" ] && app_name=${bamboo_deploy_project}
export app_name

if [ "${bamboo_deploy_project}" = "bows-zuul" ]
then
    bamboo_deploy_capserver=ccpcap-br-c301-p.br.ccp.cable.comcast.com
    playbook_name=zuul
fi

case "${bamboo_deploy_environment}" in
    poc5xbo)
      bamboo_deploy_capserver="ccpcap-po-c501-p.po.ccp.cable.comcast.com"
      export DEPLOYENVSHRT=poc5
      export DC=c5
      ;;
    ch3v503)
      bamboo_deploy_capserver="xbocap-c3-c00001-g.ch.tvx.comcast.com"
      export DEPLOYENVSHRT=ch3v503
      export DC=c5
      ;;
    ch3v503xbo)
      bamboo_deploy_capserver="xbocap-c3-c00001-g.ch.tvx.comcast.com"
      export DEPLOYENVSHRT=poc5
      export DC=c5
      ;;
    brc5xbo)
      bamboo_deploy_capserver="ccpcap-br-c501-p.br.ccp.cable.comcast.com"
      if [ "${bamboo_deploy_project}" == "bows-zuul" ] ; then bamboo_deploy_capserver=ccpcap-br-c301-p.br.ccp.cable.comcast.com ; fi
      export DEPLOYENVSHRT=brc5
      export DC=c5
      ;;
    brc3xbo)
      bamboo_deploy_capserver="ccpcap-br-c301-p.br.ccp.cable.comcast.com"
      export DEPLOYENVSHRT=brc5
      export DC=c5
      ;;
    xbodta002)
      bamboo_deploy_capserver="ccpcap-dt-c001-i.dt.ccp.cable.comcast.com"
      export DEPLOYENVSHRT=xbodt
      export DC=dt
      ;;
    *)
      echo "no deployment server set"
      exit 1
esac

DEPLOY()
{
echo "running deployment subroutine for ${bamboo_deploy_project}"

ssh -T -q xdeploy@${bamboo_deploy_capserver} << EOF
     export GIT_SSH=~/xbo/git.ssh
     if [ -d "/home/xdeploy/git/${bamboo_deploy_environment}/${bamboo_deploy_project}" ]
     then
       cd /home/xdeploy/git/${bamboo_deploy_environment}/${bamboo_deploy_project}/infra/ansible
       git checkout dev
       git pull
     else
       mkdir -p /home/xdeploy/git/${bamboo_deploy_environment}
       cd /home/xdeploy/git/${bamboo_deploy_environment}
       git clone git@github.comcast.com:xbo/${bamboo_deploy_project}.git
       cd /home/xdeploy/git/${bamboo_deploy_environment}/${bamboo_deploy_project}/infra/ansible
       git checkout dev
     fi &&

    cd /home/xdeploy/git/${bamboo_deploy_environment}/ansible &&
    git fetch &&
    git checkout v2.1.1.0-0.1.rc1 &&
    git submodule update --init --recursive &&
    . hacking/env-setup &&
    cd /home/xdeploy/git/${bamboo_deploy_environment}/${bamboo_deploy_project}/infra/ansible &&
    echo "ansible-playbook ${playbook_name}.yml -e 'deploy_env=${DEPLOYENVSHRT} app_param=${bamboo_deploy_project} ver_param=0-SNAPSHOT dc_param=${DC} app_maven_url=https://maven.teamccp.com/content/repositories/ccp-deployables-snapshots/com/comcast/xcal/xbo/${bamboo_deploy_project}/${app_name}/0-SNAPSHOT/${app_name}-0-SNAPSHOT-package.tar.gz '"  &&
    ansible-playbook ${playbook_name}.yml -e 'deploy_env=${DEPLOYENVSHRT} app_param=${bamboo_deploy_project} ver_param=0-SNAPSHOT dc_param=${DC} app_maven_url=https://maven.teamccp.com/content/repositories/ccp-deployables-snapshots/com/comcast/xcal/xbo/${bamboo_deploy_project}/${app_name}/0-SNAPSHOT/${app_name}-0-SNAPSHOT-package.tar.gz '  &&
    echo ""
EOF
}

CHECK_VERSIONS ()
{
ssh -T -q xdeploy@${bamboo_deploy_capserver} << EOF
     cd /home/xdeploy/utils/${bamboo_deploy_environment} &&
    ./check_versions  ${bamboo_deploy_project} certified &&
    echo ""
EOF
}

# lets check to see if a deployment is already running, and if it is bail
CHECKDEPLOYMENT()
{
    echo "running checkdeployment subroutine"
    check=`ssh -q xdeploy@${bamboo_deploy_capserver} "pgrep -f deploy_${bamboo_deploy_project}"`
    if [ "${check}" != "" ] ; then echo "there is a deployment running for "${bamboo_deploy_project} ; exit 1 ; fi
}

# lets check to see if jacoco listner is running, and if it is bail
CHECKJACOCO()
{
    echo "running checkjacoco subroutine"
    check=`ssh -q xdeploy@${bamboo_deploy_capserver} "pgrep -f jacoco-it_${bamboo_deploy_project}"`
    if [ "${check}" != "" ] ; then echo "jacoco listner is running exiting" ; exit 1 ; fi
}

# lets check to see if jacoco listner was started
CHECKJACOCOUP()
{
    echo "running checkjacocoup subroutine"
    check=`ssh -q xdeploy@${bamboo_deploy_capserver} "pgrep -f jacoco-it_${bamboo_deploy_project}"`
    if [ "${check}" == "" ] ; then echo "jacoco listner is not running exiting" ; exit 1 ; fi
}


case "${bamboo_jacoco_trigger}" in
    stop) echo "deploying with jacoco turned off and then stopping jacoco"
    export JACOCO=""
    CHECKDEPLOYMENT
    DEPLOY
    ssh -T -q xdeploy@${bamboo_deploy_capserver} << EOF
      cd /home/xdeploy/xbo/git_bamboo/xbo-ws-cap-scripts/utils
      ./start_stop_jacoco_server ${bamboo_deploy_project} stop
EOF
     CHECK_VERSIONS
     ;;

    stop_listner) echo "stopping jacoco listner on the cap admin"
    export JACOCO=""
    ssh -T -q xdeploy@${bamboo_deploy_capserver} << EOF
      cd /home/xdeploy/xbo/git_bamboo/xbo-ws-cap-scripts/utils
      ./start_stop_jacoco_server ${bamboo_deploy_project} stop
EOF
     CHECK_VERSIONS
     ;;

     start) echo "deploying with jacoco turned on"
     CHECKJACOCO
     CHECKDEPLOYMENT
     export JACOCO=jacoco
     ssh -T -q xdeploy@${bamboo_deploy_capserver} << EOF
        cd /home/xdeploy/utils/${bamboo_deploy_environment}
        /home/xdeploy/xbo/git_bamboo/xbo-ws-cap-scripts/utils/start_stop_jacoco_server ${bamboo_deploy_project} start ${bamboo_jacoco_version}
EOF

     DEPLOY
     CHECK_VERSIONS
     ;;

     start_listner) echo "starting jacoco listner on the cap admin"
     CHECKJACOCO
     CHECKDEPLOYMENT
     export JACOCO=jacoco
     ssh -T -q xdeploy@${bamboo_deploy_capserver} << EOF
        cd /home/xdeploy/utils/${bamboo_deploy_environment}
        echo "/home/xdeploy/xbo/git_bamboo/xbo-ws-cap-scripts/utils/start_stop_jacoco_server ${bamboo_deploy_project} start ${bamboo_jacoco_version}"
        /home/xdeploy/xbo/git_bamboo/xbo-ws-cap-scripts/utils/start_stop_jacoco_server ${bamboo_deploy_project} start ${bamboo_jacoco_version}
EOF
     CHECKJACOCOUP
     CHECK_VERSIONS
     ;;

     *) echo "running a normal deployment"
     #CHECKJACOCO
     CHECKDEPLOYMENT
     DEPLOY
     #CHECK_VERSIONS
     ;;
esac

